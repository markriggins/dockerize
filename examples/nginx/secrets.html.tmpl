<html>
<body>
<h1>Secrets</h1>
<p>Secrets can be injected into configuration files as dockerize initializes the container. To run this demo, we mounted the volume --volume $PWD:/secrets and then gave ran dockerize with the
-secrets "/secrets/secrets.env" option.</p>

<p>The secrets.env file contains a line:</p>
<pre>
    PROXY_PASSWORD="a2luZzppc25ha2Vk"
</pre>

Dockerize parsed the secrets.env file, and defined .Secret.PROXY_PASSWORD in the context used to exectute all templates.

So any occurance of &#x007B;{.Secret.PROXY_PASSWORD} in a template gets replaced with the value
of the environment variable's value.  This could be used in an nginx.conf file like this:

<pre>
        &#x007B;{ if .Secret.PROXY_PASSWORD }}
        proxy_set_header Authorization "Basic &#x007B;{ .Secret.PROXY_PASSWORD }}";
        &#x007B;{ end }}
</pre>
which would evaluate to:
<pre>
        {{ if .Secret.PROXY_PASSWORD }}
        proxy_set_header Authorization "Basic {{ .Secret.PROXY_PASSWORD }}";
        {{ end }}
</pre>

<h2>Security Concerns</h2>
<p><strong>
Displaying secrets openly like this is for demonstration purposes only -- you would NEVER actually expose secrets to the user by a url!!
</strong>.   
<ul>
<li><strong>Reading secrets from files</strong> -- Dockerize only passes secrets to programs via configuration files to prevent leakage. Secrets could be passed to programs via the environment, but programs use the environment in unpredictable ways, such as logging, or perhaps even dumping their state back to the browser.  </li>
<li><strong>Installing Secrets</strong> -- The recommended way to install secrets in production environments is to save them to a tightly protected place on the host and then mount that directory
into running docker containers that need secrets.  Yes, this is host-level security, but at this point in time, if the host running the docker daemon is not secure, then security has already been compromised. </li>
<li><strong>Tokens</strong> -- Tokens that are revokable, or can be configured to expire, are much
safer to use as secrets than long-lived passwords.  </li>
<li><strong>Encrypted</strong> -- If passwords must be used, they should be stored only in a salted, and hashed form, never as plain-text.
</ul>

</body>
<html>
